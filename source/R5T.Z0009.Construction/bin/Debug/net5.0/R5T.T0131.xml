<?xml version="1.0"?>
<doc>
    <assembly>
        <name>R5T.T0131</name>
    </assembly>
    <members>
        <member name="T:R5T.T0131.ConstantsMarkerAttribute">
            <summary>
            <para>OBSOLETE - Use values instead.</para>
            Attribute indicating a class contains constants.
            The marker attribute is useful for surveying constants classes and building a catalogue of constants.
            </summary>
        </member>
        <member name="P:R5T.T0131.ConstantsMarkerAttribute.IsConstants">
            <summary>
            Allows specifying that a class is *not* a constants class.
            This is useful for marking classes that end up canonical constants code file locations, but are not constants classes.
            </summary>
        </member>
        <member name="T:R5T.T0131.DraftConstantsMarkerAttribute">
            <summary>
            <para>OBSOLETE - Use values instead.</para>
            Attribute indicating a class contains draft constants.
            The marker attribute is useful for surveying draft constants classes and building a catalogue of draft constants as a kind of TODO list.
            </summary>
        </member>
        <member name="P:R5T.T0131.DraftConstantsMarkerAttribute.IsConstants">
            <summary>
            Allows specifying that a class is *not* a draft constants class.
            This is useful for marking classes that end up canonical draft constants code file locations, but are not draft constants classes.
            </summary>
        </member>
        <member name="T:R5T.T0131.DraftValuesMarkerAttribute">
            <summary>
            Attribute indicating an interface contains draft values.
            Values are implemented as arrow-expressions on an interface (interface default methods).
            The marker attribute is useful for surveying draft values classes and building a catalogue of draft values as a kind of TODO list.
            </summary>
        </member>
        <member name="P:R5T.T0131.DraftValuesMarkerAttribute.IsValues">
            <summary>
            Allows specifying that a class is *not* a values class.
            This is useful for marking classes that end up canonical values code file locations, but are not values classes.
            </summary>
        </member>
        <member name="T:R5T.T0131.ValuesMarkerAttribute">
            <summary>
            <para>Values interface names should be <b>plural</b>. This is so "IString" and "String" does not class with "String" from system.</para>
            Attribute indicating an interface contains values.
            Values are implemented as arrow-expressions on an interface (interface default methods).
            The marker attribute is useful for surveying values classes and building a catalogue of values.
            </summary>
        </member>
        <member name="P:R5T.T0131.ValuesMarkerAttribute.IsValues">
            <summary>
            Allows specifying that a class is *not* a values class.
            This is useful for marking classes that end up canonical values code file locations, but are not values classes.
            </summary>
        </member>
        <member name="T:R5T.T0131.Documentation">
            <summary>
            <see cref="T:R5T.T0131.ConstantsMarkerAttribute"/> marker attribute for constants classes.
            </summary>
        </member>
        <member name="T:R5T.T0131.IConstantsMarker">
            <summary>
            <para>OBSOLETE - Use values instead.</para>
            Marker interface for instantiable classes containing constants.
            </summary>
        </member>
        <member name="T:R5T.T0131.IDraftConstantsMarker">
            <summary>
            <para>OBSOLETE - Use values instead.</para>
            Marker interface for instantiable classes containing draft constants.
            </summary>
        </member>
        <member name="T:R5T.T0131.IDraftValuesMarker">
            <summary>
            Marker interface for interfaces containing draft values constants.
            Allows methods-for, and extension methods-on, all types that contain draft values.
            </summary>
        </member>
        <member name="T:R5T.T0131.IValuesMarker">
            <summary>
            Marker interface for interfaces containing values.
            Allows methods-for, and extension methods-on, all types that contain values.
            </summary>
        </member>
    </members>
</doc>
