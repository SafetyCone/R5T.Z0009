<?xml version="1.0"?>
<doc>
    <assembly>
        <name>R5T.T0132</name>
    </assembly>
    <members>
        <member name="T:R5T.T0132.DraftFunctionalityMarkerAttribute">
            <summary>
            Attribute indicating an interface contains draft functionality (functionality is encapsulated in default methods on an interface, draft functionality is quickly created functionality that should be reviewed and relocated, and thus become functionality).
            The marker attribute is useful for surveying for draft functionality interfaces and building a catalogue of draft functionality as a kind of TODO list.
            </summary>
        </member>
        <member name="P:R5T.T0132.DraftFunctionalityMarkerAttribute.IsFunctionality">
            <summary>
            Allows specifying that an interface is *not* a functionality interface.
            This is useful for marking interfaces that end up canonical functionality code file locations, but are not functionality interfaces.
            </summary>
        </member>
        <member name="T:R5T.T0132.FunctionalityMarkerAttribute">
            <summary>
            Attribute indicating an interface contains functionality (default implementation methods on an interface).
            The marker attribute is useful for surveying functionality interfaces and building a catalogue of functionality.
            </summary>
        </member>
        <member name="P:R5T.T0132.FunctionalityMarkerAttribute.IsFunctionality">
            <summary>
            Allows specifying that an interface is *not* a functionality interface.
            This is useful for marking interfaces that end up canonical functionality code file locations, but are not functionality interfaces.
            </summary>
        </member>
        <member name="T:R5T.T0132.Documentation">
            <summary>
            <see cref="T:R5T.T0132.FunctionalityMarkerAttribute"/> marker attribute for functionality classes.
            </summary>
        </member>
        <member name="F:R5T.T0132.Documentation.InstantiableClassesAreGood">
            <summary>
            Instantiable classes (as opposed to static classes) are good for functionality since they can be instantiated as static instances in the static Instances classes of dependent projects.
            </summary>
        </member>
        <member name="T:R5T.T0132.IDraftFunctionalityMarker">
            <summary>
            Marker interface for interfaces containing draft functionality.
            Allows methods-for, and extension methods-on, all types that contain draft functionality.
            <inheritdoc cref="F:R5T.T0132.Documentation.InstantiableClassesAreGood"/>
            </summary>
        </member>
        <member name="T:R5T.T0132.IFunctionalityMarker">
            <summary>
            Marker interface for interfaces containing functionality.
            Allows methods-for, and extension methods-on, all types that contain draft functionality.
            <inheritdoc cref="F:R5T.T0132.Documentation.InstantiableClassesAreGood"/>
            </summary>
        </member>
    </members>
</doc>
